print("fasf")
update.packages(ask = FALSE)
install.packages("tidyverse")
install.packages("devtools")
data <- list(c("AFFILIATION_A", "AFFILIATION_B"), c("1.AFFILIATION_C", "2.AFFILIATION_D"), c("AFFILIATION_E"))
as.data.frame(data)
data <- list(list(c("AFFILIATION_A", "AFFILIATION_B"), c("1.AFFILIATION_C", "2.AFFILIATION_D"), c("AFFILIATION_E")), c("PAPER_1", "PAPER_2", "PAPER_3"))
as.matrix(data)
library(tidyverse)
as.matrix(data) %>% t()
data.frame(as.matrix(data))
see <- data.frame(as.matrix(data))
View(see)
df %>%
mutate(author_affiliation = stringr::str_replace(author_affiliation, "\\[|\\]", ""))
stringr::str_replace("['1.GGG', '2.FAF']", "\\[|\\]", "")
stringr::str_replace_all("['1.GGG', '2.FAF']", "\\[|\\]", "")
df <- read_csv("~/Desktop/sample.csv")
View(df)
df$affiliation[1]
stringr::str_split(df$affiliation[1], pattern = ",")
library(tidyverse)
df <- read_csv("~/Desktop/sample.csv")
stringr::str_split(df$affiliation[1], pattern = ",")
library(tidyverse)
df <- read_csv("~/Desktop/sample.csv")
stringr::str_split(df$affiliation[1], pattern = ",")
df %>%
mutate(affiliation = stringr::str_replace(author_affiliation, "\\[|\\]", ""))
df %>%
mutate(affiliation = stringr::str_replace(affiliation, "\\[|\\]", ""))
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", ""))
stringr::str_split(df$affiliation[1], pattern = ",")
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ","))
df <- df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ","))
df <- df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ",")) %>%
unnest_longer(affiliation)
df <- read_csv("~/Desktop/sample.csv")
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ","))
see = df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ","))
View(see)
see = df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = as.list(stringr::str_split(affiliation, pattern = ",")))
as.list(stringr::str_split(df$affiliation[1], pattern = ","))
as.list(stringr::str_split(df$affiliation[1], pattern = ","))[1]
as.list(stringr::str_split(df$affiliation[1], pattern = ","))[2]
as.list(stringr::str_split(df$affiliation[1], pattern = ",")[[1]])
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = as.list(stringr::str_split(affiliation, pattern = ","))[[1]]) %>%
unnest_longer(affiliation)
df <- read_csv("~/Desktop/sample.csv")
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = as.list(stringr::str_split(affiliation, pattern = ","))[[1]]) %>%
unnest_longer(affiliation)
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = as.list(stringr::str_split(affiliation, pattern = ","))[[1]])
library(tidyverse)
df <- read_csv("~/Desktop/sample.csv")
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ","))
df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ",")) %>%
unnest_longer(affiliation)
df <- read_csv("~/Desktop/sample.csv")
df <- df %>%
mutate(affiliation = stringr::str_replace_all(affiliation, "\\[|\\]", "")) %>%
mutate(affiliation = stringr::str_split(affiliation, pattern = ",")) %>%
unnest_longer(affiliation)
View(df)
stringr::str_to_sentence("THIS IS WHAT I MEAN!")
def three_ad(a, b, c):
reticulate::repl_python()
shiny::runApp('Documents/rshiny/example1/MyApp')
setwd("~/Documents/rshiny/example1/MyApp/")
data <- read_csv("data/1310081701_databaseLoadingData.csv")
data <- data %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
)
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
geo_select <- c("Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec")
demo_select <- c("Total population", "Race")
data <- data %>%
filter(Demographic %in% c("Total population", demo_select)) %>%
filter(GEO %in% geo_select) %>%
mutate(
GEO = fct_relevel(
GEO,
"Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec"
),
Demographic = fct_relevel(Demographic, "Visible minority", "Post-secondary education", "Total population"),
`Sexual orientation` = fct_relevel(`Sexual orientation`, "Lesbian or gay", "Heterosexual")
) %>%
mutate() %>%
drop_na()
demo_select
demo_select <- "Visible minority"
data <- data %>%
filter(Demographic %in% c("Total population", demo_select)) %>%
filter(GEO %in% geo_select) %>%
mutate(
GEO = fct_relevel(
GEO,
"Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec"
),
Demographic = fct_relevel(Demographic, "Visible minority", "Post-secondary education", "Total population"),
`Sexual orientation` = fct_relevel(`Sexual orientation`, "Lesbian or gay", "Heterosexual")
) %>%
mutate() %>%
drop_na()
data <- read_csv("data/1310081701_databaseLoadingData.csv")
data <- data %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
)
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
data <- data %>%
filter(Demographic %in% c("Total population", demo_select)) %>%
filter(GEO %in% geo_select) %>%
mutate(
GEO = fct_relevel(
GEO,
"Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec"
),
Demographic = fct_relevel(Demographic, "Visible minority", "Post-secondary education", "Total population"),
`Sexual orientation` = fct_relevel(`Sexual orientation`, "Lesbian or gay", "Heterosexual")
) %>%
mutate() %>%
drop_na()
View(data)
see <- data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
summarise(TOTAL_VALUE = sum(VALUE)) %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE)
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
summarise(TOTAL_VALUE = sum(VALUE))
ata %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
summarise(TOTAL_VALUE = sum(VALUE)) %>%
ungroup()
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
summarise(TOTAL_VALUE = sum(VALUE)) %>%
ungroup()
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup()
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup() %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE)
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup() %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE) %>%
mutate(lg_percent = scales::percent(lg_proportion, 1))
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup() %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE) %>%
mutate(lg_percent = scales::percent(lg_proportion, 2))
data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup() %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE) %>%
mutate(lg_percent = scales::percent(lg_proportion, 0.1))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data %>%
group_by(Demographic) %>%
summarise(max_thousand = max(thousand))
data %>%
group_by(Demographic)
data_x_lim <- data %>%
group_by(Demographic) %>%
summarise(max_thousand = max(thousands))
data_x_lim
data <- read_csv("data/1310081701_databaseLoadingData.csv")
data <- data %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
)
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
geo_select <- c("Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec")
demo_select <- "Visible minority"
data <- data %>%
filter(Demographic %in% c("Total population", demo_select)) %>%
filter(GEO %in% geo_select) %>%
mutate(
GEO = fct_relevel(
GEO,
"Canada",
"British Columbia",
"Prairie provinces",
"Ontario",
"Quebec"
),
Demographic = fct_relevel(Demographic, "Visible minority", "Post-secondary education", "Total population"),
`Sexual orientation` = fct_relevel(`Sexual orientation`, "Lesbian or gay", "Heterosexual")
) %>%
mutate() %>%
drop_na()
data_percent <- data %>%
select(GEO, Demographic, VALUE, `Sexual orientation`) %>%
group_by(GEO, Demographic) %>%
mutate(TOTAL_VALUE = sum(VALUE)) %>%
ungroup() %>%
filter(`Sexual orientation` == "Lesbian or gay") %>%
mutate(lg_proportion = VALUE / TOTAL_VALUE) %>%
mutate(lg_percent = scales::percent(lg_proportion, 0.1)) %>%
select(GEO, Demographic, lg_percent)
data %>%
group_by(Demographic) %>%
summarise(max_thousand = max(thousands))
data_x_lim_dict <- set_names(data_x_lim[["max_thousand"]], data_x_lim[["Demographic"]])
data_x_lim_dict
data_x_lim <- data %>%
group_by(Demographic) %>%
summarise(max_thousand = max(thousands))
data_x_lim_dict <- set_names(data_x_lim[["max_thousand"]], data_x_lim[["Demographic"]])
data_x_lim_dict
data_x\
data_x_lim_dict[["Visible minority"]]
runApp()
data_cleaned <- reactive(filter_data(data, input$geo, input$demo))
ggplot(data = data_cleaned()[["data_bars"]], aes(y = GEO)) +
geom_col(aes(x = thousands, fill = `Sexual orientation`), position = position_dodge()) +
geom_text(data = data_cleaned()[["data_percent"]], aes(x = 0.9 * data_cleaned()[["data_x_lim_dict"]][[Demographic]], label = lg_percent)) +
facet_grid(cols = vars(Demographic), scales = "free_x")
runApp()
runApp()
runApp()
runApp()
set_title <- \(demo_var)if_else(demo_var == "Race", "Proportion of Lesbian and Gay Canadians by Minority Status", "Proportion of Lesbian and Gay Canadians by Education")
set_title("Race")
runApp()
runApp()
runApp()
chart_title()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read_csv("data/1310081701_databaseLoadingData.csv")
View(data)
data <- read_csv("data/13100817.csv")
data <- data %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
)
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
View(data)
data <- read_csv("data/13100817.csv")
see <- head(data)
View(see)
data_raw <- read_csv("data/13100817.csv")
data <- data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "	Number of persons",
sex == "Both sexes",
`Age group` == "Total, 15 years and over"
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
data <- data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "	Number of persons",
Sex == "Both sexes",
`Age group` == "Total, 15 years and over"
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "	Number of persons",
Sex == "Both sexes",
`Age group` == "Total, 15 years and over"
)
data <- data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "Number of persons",
Sex == "Both sexes",
`Age group` == "Total, 15 years and over"
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
View(data)
data_raw <- read_csv("data/13100817.csv")
data <- data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "Number of persons",
Sex == "Both sexes",
`Age group` == "Total, 15 years and over"
) %>%
mutate(
`Selected Sociodemographic characteristics` = if_else(
`Selected Sociodemographic characteristics` == "Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree",
"Post-secondary education",
`Selected Sociodemographic characteristics`
)
) %>%
filter(`Sexual orientation` %in% c("Heterosexual", "Lesbian or gay")) %>%
select(GEO, `Selected Sociodemographic characteristics`, VALUE, `Sexual orientation`) %>%
rename(Demographic = `Selected Sociodemographic characteristics`) %>%
mutate(thousands = VALUE / 1000)
data_by_age <-
data_raw %>%
filter(
`Selected Sociodemographic characteristics` %in% c(
"Total population",
"Visible minority",
"Highest level of education (ages 25 and older), post-secondary certificate/diploma or university degree"
),
Characteristics  == "Number of persons",
Sex == "Both sexes",
`Selected Sociodemographic characteristics` == "Total Population"
)
data_by_age <-
data_raw %>%
filter(
`Selected Sociodemographic characteristics` == "Total population"
Characteristics  == "Number of persons",
data_by_age <-
data_raw %>%
filter(
`Selected Sociodemographic characteristics` == "Total population",
Characteristics  == "Number of persons",
Sex == "Both sexes",
)
View(data_by_age)
data_by_age <-
data_raw %>%
filter(
`Selected Sociodemographic characteristics` == "Total population",
Characteristics  == "Number of persons",
Sex == "Both sexes",
GEO == "Canada"
)
View(data_by_age)
